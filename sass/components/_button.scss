.btn {
  &,  // Use this here to apply to button element as well because 'link' and 'visited' will not work with button, only anchor
  &:link,
  &:visited {
    /* Pseudo class - this link is a state of the btn class (also we don't want visited state to change which is why we put this here)*/
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;  /* Do this if we want to give some height, padding, width, ect... to elements */
    border-radius: 1rem;
    transition: all .2s;  /* choose which properties to animate !must be on initial state! */
    position: relative; /* we do this for the fixed-psuedo-element */
    font-size: $default-font-size;

    // button element
    border: none;
    cursor: pointer;
  }

  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba($color-black,.2);  /* x offset, y offset, blur, color(black w/ 20% transparency) */
  
    &::after{
      /* we want after elements to have properties when the button is on the hover state */
      transform: scale(1.50); /* simply incrase the element */
      opacity: 0;  /* trick to fade something out with transition property on initial state */
    }
  }

  &:active,
  &:focus{
    outline: none;
    transform: translateY(-1px);  /* this is in relation to initial (link) state, not hover state */
    box-shadow: 0 .5rem 1rem rgba($color-black,.2);
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark;

    &::after{
      background-color: $color-white;
    }
  }

  &--orange {
    background-color: $color-primary-dark;
    color: $color-white;

    &::after{
      background-color: $color-primary-dark;
    }
  }

  &::after {
    /* after psuedo element, it's basically a child of parent element */
    content: "";
    display: inline-block; /* because button we have is also an inline block */
    height: 100%;
    width: 100%;
    border-radius: 1rem;
    position: absolute; /*put behind button, initially goes by header since header is relative */
    top: 0;
    left: 0;
    z-index: -1; /* defines elements if there are many on top of one another */
    transition: all .4s; /* Animate only on initial state */
  }
  
  &--animated{
    animation: moveInBottom 0.5s ease-out .75s backwards;  /* backwards - apply styles BEFORE animation starts */
  }
}

.btn-text {
  // links, visited, hover, and pseudo classes

  &:link,
  &:visited {
    color: $color-primary;
    display: inline-block;  /* do this so we can apply properties like padding, margin, ect... */
    text-decoration: none;
    border-bottom: 1px solid $color-primary-dark;
    padding: 3px;  /* okay to use finite units here because they are so small */
    font-size: $default-font-size;
    transition: all .2s;
  }

  &:hover {
    background-color: $color-primary-dark;
    color: $color-white;
    box-shadow: 0 1rem 2rem rgba($color-black,.15);  /* X Y Blur Color */
    transform: translateY(-2px);  /* ties in with the transition above */
  }
  
  &:active {
    box-shadow: 0 .5rem 1rem rgba($color-black,.15);  /* X Y Blur Color */
    transform: translateY(0);  /* ties in with the transition above */
  }
}